plugins {
    id 'org.quiltmc.loom' version '0.12.+'
}

archivesBaseName = "${mod_id}-quilt-${minecraft_version}"

repositories {
    maven {
        name 'Quilt (Release)'
        url 'https://maven.quiltmc.org/repository/release/'
    }

    maven {
        name 'Quilt (Snapshot)'
        url 'https://maven.quiltmc.org/repository/snapshot/'
        content {
            includeGroup 'org.quiltmc.fabric_api_qsl'
            includeGroupByRegex 'org\\.quiltmc\\.qsl(?:\\.[a-z_]+)?'
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "org.quiltmc:quilt-loader:${quilt_loader_version}"

    modApi "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${rootProject.quilted_fabric_api_version}"

    implementation project(path: ':Common', configuration: 'namedElements')
}

loom {
    shareCaches()
    runs {
        client {
            client()
            setConfigName("Quilt Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Quilt Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("quilt.mod.json") {
        expand "version": project.version
    }

    filesMatching("${mod_id}.mixins.json") {
        expand "refmap_target": "${archivesBaseName}-"
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}
