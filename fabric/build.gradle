plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
}

architectury {
    platformSetupLoomIde()
    fabric()
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    modApi "net.dodogang.plume:plume-fabric:${rootProject.plume_version}"

    modRuntime("com.terraformersmc:modmenu:${rootProject.mod_menu_version}")

    // Remove the following line to gain access to REI's API in code.
    // modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:${rootProject.rei_version}"
    modRuntime "me.shedaniel:RoughlyEnoughItems:${rootProject.rei_version}"

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentFabric(project(path: ":common")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "fabric"
}

jar {
    classifier "dev"
}

java {
    withSourcesJar()
}

sourcesJar {
    def commonSources = project(":common").remapSourcesJar
    dependsOn commonSources
    from zipTree(commonSources.output)
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                classifier null
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        if (System.getenv("MODMAVEN_API_KEY") != null) {
            maven {
                name = "modmaven"
                url = "http://modmaven.dev/artifactory/local-releases"
                credentials {
                    username = "dodogang"
                    password = System.getenv("MODMAVEN_API_KEY")
                }
            }
        }
    }
}
